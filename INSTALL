       frankl's stereo utilities - Installation


You need a Linux system with a C-compiler and header files for libasound.
(on Debian/Ubuntu and similar distributions:
     sudo apt-get install gcc libasound2-dev
)

To compile the programs 'playhrt', 'bufhrt', 'volrace', 'writeloop',
'catloop', 'cptoshm', 'shmcat' and 'highrestest' hsay:

  make

On ARM architecture there are alternative calls which use some assembler
code for refreshing or cleaning memory:

  make REFRESH=ARM
  make REFRESH=VFP

Use the latter if your CPU supports VFP, check 'Features' 
with 'less /proc/cpuinfo'. 

Then copy the files in the 'bin/' directory to some directory in your PATH.

To read the documentation of the programs you can call them without option
or with --help.

Example scripts for using these programs are contained in the 'scripts/'
directory. Explanations can be found on the page:
  http://frank_l.bitbucket.org/stereoutils/player.html 

For a good performance of 'playhrt' and 'bufhrt' you should use a Linux
kernel with highres timers enabled. This is the case for most Linux
distributions, you can check it by running the utility 'bin/highrestest'.

Have fun!





##  We keep here for a while some old hints for compiling earlier versions
##  of these programs. This can still be done but is no longer needed, instead 
##  we recommend for version 0.7 and later of this package to use playhrt 
##  with the --mmap option.

------------------------------------------------------------------------
Another version of 'playhrt' can be compiled using a patched
ALSA library. See below how to compile the patched library. Once you
have done this, say:

  make bin/playhrt_ALSANC ALSANC=/my/alsa/install/dir/

or for a statically linked version:
  
  make bin/playhrt_static ALSANC=/my/alsa/install/dir/

Then use one of these instead of bin/playhrt.
------------------------------------------------------------------------
   Compile a patched version of alsa-lib

Idea:  provide function 'snd_pcm_writei_nc' which writes data to driver 
       buffer without doing any checks before.  
       Then use 'snd_pcm_writei_nc' instead of 'snd_pcm_writei'.

- unpack alsa-lib (say alsa-lib-1.0.27.tar.bz2, see
         http://www.alsa-project.org/main/index.php/Main_Page )
- add after similar lines for 'snd_pcm_writei' 
    in include/pcm.h

snd_pcm_sframes_t snd_pcm_writei_nc(snd_pcm_t *pcm, const void *buffer, snd_pcm_uframes_t size);

    and in src/pcm/pcm.c

snd_pcm_sframes_t snd_pcm_writei_nc(snd_pcm_t *pcm, const void *buffer, snd_pcm_uframes_t size)
{
       return _snd_pcm_writei(pcm, buffer, size);
}

- then do 
          ./configure --prefix=/my/alsa/install/dir
          make
          make install

- then link to this with 
     gcc ....   -I /my/alsa/install/dir/include -L/my/alsa/install/dir/lib ..... -lasound ...



